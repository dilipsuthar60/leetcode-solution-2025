{"leetcode":{"easy":0,"hard":1,"medium":11,"shas":{"1160-letter-tile-possibilities":{"1160-letter-tile-possibilities.cpp":"5a23428706f99edaad448ac1999f8a6fcab8ea22","README.md":"ecdd62c8f4929550e19a9ef89fc7f383a06757fc","difficulty":"medium"},"README.md":{"":"b27e5f3720580d54cb66ae17bc10b3414cb6d5f2"},"3779-eat-pizzas":{"3779-eat-pizzas.cpp":"297c12bf2c6b4661ef4b2bacc156a3fc341cbd2c","README.md":"b44bd6bc40ce6564f4515ad2ad5077aee55c5a43","difficulty":"medium"},"stats.json":{"":"7470ac3a44c8e04ed923268ed7796ebbebfa9503"},"2473-max-sum-of-a-pair-with-equal-sum-of-digits":{"2473-max-sum-of-a-pair-with-equal-sum-of-digits.cpp":"bb4c4806dd607e721d86e3fcae18a6e46eac7d38","README.md":"73f87a1496417041066447cafc699c8620fc3749","difficulty":"medium"},"2456-construct-smallest-number-from-di-string":{"2456-construct-smallest-number-from-di-string.cpp":"2a30cb27b411cb5679db24fa012a3e160be03adc","README.md":"21841a0a03c296d304bf839c4adee79011cb19c0","difficulty":"medium"},"1516-the-k-th-lexicographical-string-of-all-happy-strings-of-length-n":{"1516-the-k-th-lexicographical-string-of-all-happy-strings-of-length-n.cpp":"11fc3f8a4e77d2963500801f599f5f4405167957","README.md":"74b9d9e1b6446b5be7ad47bc14343df8d9ecc958","difficulty":"medium"},"2107-find-unique-binary-string":{"2107-find-unique-binary-string.cpp":"51f65462d2bc163f2195b23d80a6bfe0afb3970d","README.md":"b0b6e304f8d6bd3ff908e232d68c40f89ee7c9cd","difficulty":"medium"},"3754-maximum-manhattan-distance-after-k-changes":{"3754-maximum-manhattan-distance-after-k-changes.cpp":"a5c76b39bdcefc1430fa6f1a3f71179360a37723","README.md":"cbe49bbda1617e2e78a96a550dac2d3613b12c68","difficulty":"medium"},"1093-recover-a-tree-from-preorder-traversal":{"1093-recover-a-tree-from-preorder-traversal.cpp":"03b44c26dd31567313aa76f6f399f0617b1c9b10","README.md":"b70ae544747eef7effda85e53eeef3f8a9d5e9b1","difficulty":"hard"},"3764-maximum-sum-with-at-most-k-elements":{"3764-maximum-sum-with-at-most-k-elements.cpp":"d0bac43c3783a43cc1a5c8dd89b13cf4f3c63829","README.md":"bfd80763b9778479864519971b1462a41717cc13","difficulty":"medium"},"0925-construct-binary-tree-from-preorder-and-postorder-traversal":{"0925-construct-binary-tree-from-preorder-and-postorder-traversal.cpp":"05bcc23e1d0bff75be91899ae9ccaff653f5e5c1","README.md":"be31bf390a70467103dd25c4054df5dcb6e1bfb3","difficulty":"medium"},"2564-most-profitable-path-in-a-tree":{"2564-most-profitable-path-in-a-tree.cpp":"f0955c6bfd118a4bfa06bf80011cb49e86eeba18","README.md":"e56db6241b94a4f297e763b1b86a745d31513479","difficulty":"medium"},"3771-select-k-disjoint-special-substrings":{"3771-select-k-disjoint-special-substrings.cpp":"003c0b0bb692d836ff3467639297ec62ce21f51a","README.md":"6a7af44765fa29a68ded70a88abcb16b87aab2d0","difficulty":"medium"}},"solved":12}}